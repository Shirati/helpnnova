// <auto-generated />
using System;
using Helpnova_Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelpnovaRepositories.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240421090905_MyMigration")]
    partial class MyMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Helpnova_Repositories.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("ContactDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.Procedure", b =>
                {
                    b.Property<int>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcedureId"));

                    b.Property<string>("AlternateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("EstimatedReadingTime")
                        .HasColumnType("time");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowToGetThere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageLink1")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ImageLink2")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ImageLink3")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcedureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SeeMore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProcedureId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.ProcedureCourse", b =>
                {
                    b.Property<int>("ProcedureCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcedureCourseId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProcedureCourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProcedureId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProcedureCourses");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int?>("AuthorizationLevel")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.Course", b =>
                {
                    b.HasOne("Helpnova_Repositories.Models.Customer", "Customer")
                        .WithMany("Courses")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Helpnova_Repositories.Models.Product", "Product")
                        .WithMany("Courses")
                        .HasForeignKey("ProductId");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.Procedure", b =>
                {
                    b.HasOne("Helpnova_Repositories.Models.Customer", "Customer")
                        .WithMany("Procedures")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Helpnova_Repositories.Models.Product", "Product")
                        .WithMany("Procedures")
                        .HasForeignKey("ProductId");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.ProcedureCourse", b =>
                {
                    b.HasOne("Helpnova_Repositories.Models.Course", "Course")
                        .WithMany("ProcedureCourses")
                        .HasForeignKey("CourseId");

                    b.HasOne("Helpnova_Repositories.Models.Customer", "Customer")
                        .WithMany("ProcedureCourses")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Helpnova_Repositories.Models.Procedure", "Procedure")
                        .WithMany("ProcedureCourses")
                        .HasForeignKey("ProcedureId");

                    b.HasOne("Helpnova_Repositories.Models.Product", "Product")
                        .WithMany("ProcedureCourses")
                        .HasForeignKey("ProductId");

                    b.Navigation("Course");

                    b.Navigation("Customer");

                    b.Navigation("Procedure");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.Product", b =>
                {
                    b.HasOne("Helpnova_Repositories.Models.Customer", "Customer")
                        .WithMany("Products")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.User", b =>
                {
                    b.HasOne("Helpnova_Repositories.Models.Customer", "Customer")
                        .WithMany("Users")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Helpnova_Repositories.Models.Product", "Product")
                        .WithMany("Users")
                        .HasForeignKey("ProductId");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.Course", b =>
                {
                    b.Navigation("ProcedureCourses");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.Customer", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("ProcedureCourses");

                    b.Navigation("Procedures");

                    b.Navigation("Products");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.Procedure", b =>
                {
                    b.Navigation("ProcedureCourses");
                });

            modelBuilder.Entity("Helpnova_Repositories.Models.Product", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("ProcedureCourses");

                    b.Navigation("Procedures");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
